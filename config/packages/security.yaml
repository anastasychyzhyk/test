security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        backed_user:
            memory:
                users:
                    user: {password: '$argon2id$v=19$m=65536,t=4,p=1$YThaSDZiblF6MWJlSWtsOA$Si/jzpCyXwvY3JOiAyPpNrNUw/hbxmc6og3Rhhok+20', roles: ['ROLE_USER']}
                    admin: {password: '$argon2id$v=19$m=65536,t=4,p=1$RUVCU3BtcG02Lk10RTBSYQ$pNP5rv4XRnxo0B+XGjCZF/m2YUmLoBqiVgw+EWfKenc', roles: ['ROLE_ADMIN']}
    encoders:
        Symfony\Component\Security\Core\User\User: 'auto'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: backed_user
            http_basic:
                realm: Secured Area
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
